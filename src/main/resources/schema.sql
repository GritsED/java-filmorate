DROP TABLE IF EXISTS filmDirector;
DROP TABLE IF EXISTS directors;
DROP TABLE IF EXISTS REVIEW_RATINGS;
DROP TABLE IF EXISTS REVIEWS;
DROP TABLE IF EXISTS FILMGENRE;
DROP TABLE IF EXISTS FRIENDS;
DROP TABLE IF EXISTS GENRES;
DROP TABLE IF EXISTS LIKES;
DROP TABLE IF EXISTS USERS;
DROP TABLE IF EXISTS FILMS;
DROP TABLE IF EXISTS MPA;

CREATE TABLE IF NOT EXISTS users (
id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
email VARCHAR(50) NOT NULL UNIQUE,
login VARCHAR(50) NOT NULL,
name VARCHAR(100),
birthday DATE NOT NULL
);
CREATE TABLE IF NOT EXISTS mpa (
id  SMALLINT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
rate VARCHAR(10) NOT NULL
);

CREATE TABLE IF NOT EXISTS films (
id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name VARCHAR(100) NOT NULL,
description VARCHAR(500) NOT NULL,
releaseDate DATE,
duration SMALLINT NOT NULL,
mpa_id SMALLINT NOT NULL REFERENCES mpa(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS genres (
id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS filmGenre (
film_id INTEGER REFERENCES films(id) ON DELETE CASCADE,
genre_id INTEGER REFERENCES genres(id) ON DELETE CASCADE,
PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS likes (
film_id INTEGER NOT NULL REFERENCES films(id) ON DELETE CASCADE,
user_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
PRIMARY KEY (film_id, user_id)
);

CREATE TABLE IF NOT EXISTS friends (
user_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
friend_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS reviews (
id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
content VARCHAR(200),
is_positive BOOLEAN,
user_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
film_id INTEGER NOT NULL REFERENCES films(id) ON DELETE CASCADE,
useful INTEGER
);

CREATE TABLE IF NOT EXISTS review_ratings (
    user_id     INTEGER NOT NULL REFERENCES users (id) ON DELETE CASCADE,
    review_id   INTEGER NOT NULL REFERENCES reviews (id) ON DELETE CASCADE,
    is_positive BOOLEAN,
    PRIMARY KEY (user_id, review_id)
);

CREATE TABLE IF NOT EXISTS directors (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS filmDirector (
    film_id INTEGER REFERENCES films(id) ON DELETE CASCADE,
    director_id INTEGER REFERENCES directors(id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, director_id)
);