CREATE TABLE IF NOT EXISTS users (
user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
email VARCHAR(50) NOT NULL UNIQUE,
login VARCHAR(50) NOT NULL,
name VARCHAR(100),
birthday DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS films (
film_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name VARCHAR(100) NOT NULL,
description VARCHAR(500) NOT NULL,
releaseDate DATE,
duration SMALLINT NOT NULL
);

CREATE TABLE IF NOT EXISTS mpa (
film_id INTEGER REFERENCES films(film_id) ON DELETE CASCADE,
rate VARCHAR(10) NOT NULL
);

CREATE TABLE IF NOT EXISTS genre (
genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS filmGenre (
film_id INTEGER REFERENCES films(film_id) ON DELETE CASCADE,
genre_id INTEGER REFERENCES genre(genre_id) ON DELETE CASCADE,
PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS likes (
film_id INTEGER NOT NULL REFERENCES films(film_id) ON DELETE CASCADE,
user_id INTEGER NOT NULL REFERENCES users(user_id) ON DELETE CASCADE,
PRIMARY KEY (film_id, user_id)
);

CREATE TABLE IF NOT EXISTS friends (
user_id INTEGER NOT NULL REFERENCES users(user_id) ON DELETE CASCADE,
friend_id INTEGER NOT NULL REFERENCES users(user_id) ON DELETE CASCADE,
status BOOLEAN NOT NULL DEFAULT FALSE,
PRIMARY KEY (user_id, friend_id)
);